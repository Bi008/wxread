##############################
### 微信读书自动化配置
##############################
name: WeRead Automation

on:
  schedule:
    # 北京时间定时任务（每个任务独立设置时区）
    - cron: '0 22 * * *'     # 每天22:00
      timezone: Asia/Shanghai
    - cron: '0 5 * * *'      # 每天5:00
      timezone: Asia/Shanghai
    - cron: '40 11 * * *'    # 每天11:40
      timezone: Asia/Shanghai
    - cron: '0 17 * * 6,7'   # 周末17:00（周六/日）
      timezone: Asia/Shanghai
    - cron: '0 8 * * 1'      # 周一8:00
      timezone: Asia/Shanghai

  workflow_dispatch:
    inputs:
      mode:
        description: '运行模式选择'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - manual

jobs:
  time-generator:
    runs-on: ubuntu-22.04
    environment: Production

    steps:
    - name: 🔄 代码检出
      uses: actions/checkout@v4

    - name: 🐍 Python环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: 📦 依赖安装
      run: pip install requests==2.32.3

    - name: ⏳ 智能延迟
      if: ${{ github.event_name == 'schedule' && inputs.mode != 'manual' }}
      run: |
        # 周一任务不延迟
        if [ $(date +%u) -eq 1 ] && [ $(date +%H) -eq 8 ]; then
          echo "⏩ 跳过周一延迟"
          exit 0
        fi
        
        # 生成随机延迟（0-20分钟）
        DELAY=$(( RANDOM % 21 ))
        echo "🕒 延迟时间：${DELAY}分钟"
        sleep ${DELAY}m

    - name: 🎲 周随机机制
      if: ${{ github.event_name == 'schedule' && inputs.mode == 'auto' }}
      run: |
        # 每周一1/7概率跳过
        if [ $(date +%u) -eq 1 ] && [ $(date +%H) -eq 8 ]; then
          if [ $(( RANDOM % 7 )) -eq 0 ]; then
            echo "⏩ 本周任务已跳过"
            exit 0
          fi
        fi

    - name: 🕒 时长生成
      id: generate-time
      run: |
        # 模式判断
        if [[ "${{ inputs.mode }}" == "manual" ]]; then
          NUM=$(( 90 + RANDOM % 91 ))  # 手动模式90-180
          echo "🛠️ 手动生成时长：${NUM}秒"
        else
          # 自动模式时间判断
          CURRENT_HOUR=$(date +%-H)
          CURRENT_WEEKDAY=$(date +%u)
          
          case "${CURRENT_HOUR}" in
            5)   # 晨间任务5:00
              NUM=$(( 90 + RANDOM % 61 )) ;;  # 90-150
            11)  # 午间任务11:40
              NUM=$(( 120 + RANDOM % 61 )) ;; # 120-180
            22)  # 晚间任务22:00
              NUM=$(( 120 + RANDOM % 61 )) ;;
            17)  # 周末任务17:00
              if [ $CURRENT_WEEKDAY -ge 6 ]; then
                NUM=$(( 120 + RANDOM % 61 ))
              else
                echo "⚠️ 非周末跳过"
                NUM=0
              fi ;;
            8)   # 周一任务8:00
              NUM=$(( 120 + RANDOM % 61 )) ;;
            *)
              echo "❌ 时间匹配错误"
              exit 1 ;;
          esac
        fi
        
        # 输出结果
        echo "read_time=${NUM}" >> $GITHUB_OUTPUT

    - name: 📤 结果输出
      if: ${{ steps.generate-time.outputs.read_time != 0 }}
      run: |
        echo "✅ 最终阅读时长：${{ steps.generate-time.outputs.read_time }}秒"
