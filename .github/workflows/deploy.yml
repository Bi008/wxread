name: WeRead Auto

on:
  schedule:
    - cron: '0 22 * * *'    # 北京时间22:00
    - cron: '0 5 * * *'     # 北京时间5:00
    - cron: '40 11 * * *'   # 北京时间11:40
    - cron: '0 17 * * 6,7'  # 周末17:00（周六/日）
    - cron: '0 8 * * 1'     # 周一8:00
  timezone: Asia/Shanghai  # ✅ 修正位置：移至schedule列表同级

  workflow_dispatch:
    inputs:
      mode:
        description: '运行模式 (auto/manual)'
        required: false
        default: 'auto'

jobs:
  generate-reading-time:
    runs-on: ubuntu-22.04
    environment: Production

    steps:
    - name: 🛠️ 检出代码
      uses: actions/checkout@v4

    - name: 🐍 配置Python环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: 📦 安装依赖
      run: pip install requests==2.32.3

    - name: ⏳ 随机延迟
      if: github.event_name == 'schedule' && github.event.inputs.mode != 'manual'
      run: |
        if [ $(date +%u) -eq 1 ] && [ $(date +%H) -eq 8 ]; then
          echo "⏩ 跳过周一任务延迟"
          exit 0
        fi
        DELAY=$((RANDOM % 21))
        echo "随机延迟 ${DELAY} 分钟"
        sleep ${DELAY}m

    - name: 🎲 周随机跳过
      if: github.event_name == 'schedule' && github.event.inputs.mode == 'auto'
      run: |
        if [ $(date +%u) -eq 1 ] && [ $(date +%H) -eq 8 ]; then
          if [ $((RANDOM % 7)) -eq 0 ]; then
            echo "⏩ 本周任务已跳过"
            exit 0
          fi
        fi

    - name: 🕒 生成阅读时长
      id: time-generator
      run: |
        MODE="${{ github.event.inputs.mode }}"
        if [[ "$MODE" == "manual" ]]; then
          NUM=$((90 + RANDOM % 91))
          echo "手动生成时长: ${NUM}秒"
        else
          CURRENT_HOUR=$(date +%-H)
          CURRENT_WEEKDAY=$(date +%u)

          case "${CURRENT_HOUR}" in
            5)   # 晨间任务
              NUM=$((90 + RANDOM % 61)) ;;
            11)  # 午间任务
              NUM=$((120 + RANDOM % 61)) ;;
            22)  # 晚间任务
              NUM=$((120 + RANDOM % 61)) ;;
            17)  # 周末任务
              if [ $CURRENT_WEEKDAY -ge 6 ]; then
                NUM=$((120 + RANDOM % 61))
              else
                echo "⚠️ 非周末时间跳过周末任务"
                NUM=0
              fi ;;
            8)   # 周一任务
              NUM=$((120 + RANDOM % 61)) ;;
            *)
              echo "❌ 未匹配到有效时间段"
              exit 1 ;;
          esac
        fi
        echo "read_time=$NUM" >> $GITHUB_OUTPUT

    - name: 📤 结果输出
      if: steps.time-generator.outputs.read_time != '0'
      run: |
        echo "✅ 最终阅读时长：${{ steps.time-generator.outputs.read_time }}秒"
