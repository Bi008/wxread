##############################
### 工作流基本信息配置
##############################
name: wxread

on:
  ##############################
  ### 触发条件配置（北京时间）
  ##############################
  schedule:
    - cron: '0 22 * * *'        # 每天22:00
    - cron: '0 5 * * *'         # 每天5:00
    - cron: '40 11 * * *'      # 每天11:40
    - cron: '0 17 * * 6,7'     # 周末17:00（周六/日）
    - cron: '0 8 * * 1'        # 周一8:00
    timezone: Asia/Shanghai

  workflow_dispatch:
    inputs:
      mode:
        description: '运行模式 (auto/manual)'
        required: false
        default: 'auto'

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment: AutoRead

    steps:
    - name: 📥 检出仓库
      uses: actions/checkout@v4

    - name: 🐍 设置Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: 📦 安装依赖
      run: pip install requests==2.32.3

    - name: ⏱️ 动态延迟
      if: github.event_name == 'schedule' && inputs.mode != 'manual'
      run: |
        if [ $(date +%u) -eq 1 ] && [ $(date +%H) -eq 8 ]; then
          echo "⏩ 周一任务跳过延迟"
          exit 0
        fi
        
        DELAY=$((RANDOM % 21))
        echo "🕒 随机延迟 $DELAY 分钟"
        sleep ${DELAY}m

    - name: 🎲 周随机机制
      if: github.event_name == 'schedule' && inputs.mode == 'auto'
      run: |
        if [ $(date +%u) -eq 1 ] && [ $(date +%H) -eq 8 ]; then
          if [ $((RANDOM % 7)) -eq 0 ]; then
            echo "⏩ 本周任务已跳过"
            exit 0
          fi
        fi

    - name: 🔢 智能生成时长
      id: time_generator
      run: |
        if [[ "${{ inputs.mode }}" == "manual" ]]; then
          NUM=$((90 + RANDOM % 91))
          echo "🛠️ 手动模式生成: ${NUM}s"
        else
          CURRENT_HOUR=$(date +%H)
          case $CURRENT_HOUR in
            05)
              NUM=$((90 + RANDOM % 61)) ;;
            11)
              NUM=$((120 + RANDOM % 61)) ;;
            22)
              NUM=$((120 + RANDOM % 61)) ;;
            17)
              if [ $(date +%u) -ge 6 ]; then
                NUM=$((120 + RANDOM % 61))
              else
                echo "⚠️ 非周末跳过周末任务"
                NUM=0
              fi ;;
            08)
              NUM=$((120 + RANDOM % 61)) ;;
            *)
              echo "❌ 时间匹配异常"
              exit 1 ;;
          esac
        fi
        echo "::set-output name=read_time::$NUM"
